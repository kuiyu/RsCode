<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RsCode</name>
    </assembly>
    <members>
        <member name="T:System.AssemblyContainer">
            <summary>
            程序集容器
            </summary>
        </member>
        <member name="M:System.AssemblyContainer.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="assemblyPath"></param>
        </member>
        <member name="M:System.AssemblyContainer.GetAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:System.AutoMapperExtensions">
            <summary>
            AutoMapper扩展
            </summary>
        </member>
        <member name="M:System.AutoMapperExtensions.CreateMapper``2">
            <summary>
            创建Mapper
            </summary>
            <typeparam name="TSource">要被转化的model</typeparam>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <returns></returns>
        </member>
        <member name="M:System.AutoMapperExtensions.CreateMapper(System.Type,System.Type)">
            <summary>
            创建Mapper
            </summary>
            <param name="sourceType">要被转化的model类型</param>
            <param name="destinationType">转化之后的model类型</param>
            <returns></returns>
        </member>
        <member name="M:System.AutoMapperExtensions.MapTo``1(System.Object)">
            <summary>
            类型映射
            </summary>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <param name="obj">可以使用这个扩展方法的类型</param>
            <returns>转化之后的实体</returns>
        </member>
        <member name="M:System.AutoMapperExtensions.MapTo``1(System.Object,System.Action{AutoMapper.IMapperConfigurationExpression})">
            <summary>
            复杂类型映射
            </summary>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <param name="obj">可以使用这个扩展方法的类型</param>
            <param name="configure"></param>
            <returns>转化之后的实体</returns>
        </member>
        <member name="M:System.AutoMapperExtensions.MapTo``2(``1)">
            <summary>
             类型映射
            </summary>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <typeparam name="TSource">要被转化的model</typeparam>
            <param name="source">可以使用这个扩展方法的类型</param>
            <returns>转化之后的实体</returns>
        </member>
        <member name="M:System.AutoMapperExtensions.MapTo``1(System.Collections.IEnumerable)">
            <summary>
             类型映射,默认字段名字一一对应
            </summary>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <typeparam name="TSource">要被转化的model</typeparam>
            <param name="source">可以使用这个扩展方法的类型</param>
            <returns>转化之后的实体</returns>
        </member>
        <member name="M:System.AutoMapperExtensions.MapTo``2(System.Collections.Generic.IEnumerable{``1})">
            <summary>
             类型映射
            </summary>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <typeparam name="TSource">要被转化的model</typeparam>
            <param name="source">可以使用这个扩展方法的类型</param>
            <returns>转化之后的实体</returns>
        </member>
        <member name="M:System.AutoMapperExtensions.MapTo``1(System.Data.DataTable)">
            <summary>
            DataTable映射
            </summary>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <param name="dt">DataTable对象</param>
            <returns></returns>
        </member>
        <member name="M:System.AutoMapperExtensions.MapTo``1(System.Data.DataSet,System.Int32)">
            <summary>
            DataSet映射
            </summary>
            <typeparam name="TDestination">转化之后的model</typeparam>
            <param name="ds">DataSet对象</param>
            <param name="tableIndex">DataSet中要映射的DataTable的索引</param>
            <returns></returns>
        </member>
        <member name="T:System.CmdHelper">
            <summary>
            cmd命令帮助类
            </summary>
        </member>
        <member name="M:System.CmdHelper.Run(System.String,System.String)">
            <summary>
            使用系统shell 指定命令和参数 设置标准输出
            </summary>
            <param name="cmd">命令</param>
            <param name="param">参数</param>
        </member>
        <member name="M:System.CmdHelper.Run(System.String)">
            <summary>
            执行指定文件中的命令
            </summary>
            <param name="fileName">文件路径</param>
        </member>
        <member name="M:System.CmdHelper.IsWindows">
            <summary>
            是否是Windows系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.CmdHelper.IsLinux">
            <summary>
            是否是Linux系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.CmdHelper.IsOSX">
            <summary>
            是否是OSX系统
            </summary>
            <returns></returns>
        </member>
        <member name="T:System.CustomAttributeHelper">
            <summary>
            自定义特性
            </summary>
        </member>
        <member name="F:System.CustomAttributeHelper.Cache">
            <summary>
            Cache Data
            </summary>
        </member>
        <member name="M:System.CustomAttributeHelper.GetCustomAttributeValue``1(System.Type,System.Func{``0,System.String})">
            <summary>
            获取CustomAttribute Value
            </summary>
            <typeparam name="T">Attribute的子类型</typeparam>
            <param name="sourceType">头部标有CustomAttribute类的类型</param>
            <param name="attributeValueAction">取Attribute具体哪个属性值的匿名函数</param>
            <returns>返回Attribute的值，没有则返回null</returns>
        </member>
        <member name="M:System.CustomAttributeHelper.GetCustomAttributeValue``1(System.Type,System.Func{``0,System.String},System.String)">
            <summary>
            获取CustomAttribute Value
            </summary>
            <typeparam name="T">Attribute的子类型</typeparam>
            <param name="sourceType">头部标有CustomAttribute类的类型</param>
            <param name="attributeValueAction">取Attribute具体哪个属性值的匿名函数</param>
            <param name="name">field name或property name</param>
            <returns>返回Attribute的值，没有则返回null</returns>
        </member>
        <member name="M:System.CustomAttributeHelper.CacheAttributeValue``1(System.Type,System.Func{``0,System.String},System.String)">
            <summary>
            缓存Attribute Value
            </summary>
        </member>
        <member name="M:System.CustomAttributeHelper.BuildKey(System.Type,System.String)">
            <summary>
            缓存Collection Name Key
            </summary>
        </member>
        <member name="T:System.DateTimeHelper">
            <summary>
            日期帮助类
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.DateTimeHelper.GetTimeByJavascript(System.Int64)" -->
        <member name="M:System.DateTimeHelper.ConvertDateTimeByJavascript(System.DateTime)">
            <summary>
            把时间转换为javascript所使用的时间
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeHelper.ConvertDateTimeByUnix(System.DateTime)">
            <summary>
            把时间格式转换为Unix时间戳格式
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeHelper.GetTimeByUnix(System.Int64)">
            <summary>
            把Unix时间戳转化为时间
            </summary>
            <param name="unixTimeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeHelper.GetStartDateTime(System.DateTime)">
            <summary>
            获取以0点0分0秒开始的日期
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeHelper.GetEndDateTime(System.DateTime)">
            <summary>
            获取以23点59分59秒结束的日期
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeHelper.GetFirstDayByMonth(System.DateTime)">
            <summary>
            获取指定时间的当月第一天
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:System.DateTimeHelper.GetEndDayByMonth(System.DateTime)">
            <summary>
            获取指时间的当月最后一天
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:System.EnumHelper">
            <summary>
            枚举类型工具类
            </summary>
        </member>
        <member name="M:System.EnumHelper.GetEnumDesc``1(System.Int32)">
            <summary>
            返回枚举值的描述信息。
            </summary>
            <param name="value">要获取描述信息的枚举值。</param>
            <returns>枚举值的描述信息。</returns>
        </member>
        <member name="M:System.Text.Json.JsonHelper.JsonSerialize(System.Object)">
            <summary>
            使用json格式序列化对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:System.Text.Json.JsonHelper.Save``1(System.String,``0,System.Boolean)">
            <summary>
            保存json对象到文件
            </summary>
            <typeparam name="T">json对象</typeparam>
            <param name="path">json文件路径</param>
            <param name="obj">json对象</param>
            <param name="clear">是否清空原文件</param>
        </member>
        <member name="M:System.Text.Json.JsonHelper.GetJsonValue(Newtonsoft.Json.Linq.JEnumerable{Newtonsoft.Json.Linq.JToken},System.String)">
            <summary>
            获取指key的值
            </summary>
            <param name="jToken"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:System.PropertyValue`1">
            <summary>
            属性值
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:System.PropertyValue`1.Get(System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:RsCode.Config.AppConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:RsCode.Config.AppConfig.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:RsCode.Config.AppConfig.Exists(System.String,System.String)">
            <summary>
            检查节点是否存在
            </summary>
            <param name="key"></param>
            <param name="JsonFilePath"></param>
            <returns></returns>
        </member>
        <member name="T:RsCode.AppSettings">
            <summary>
            .netcore json config
            </summary>
        </member>
        <member name="M:RsCode.AppSettings.Exists(System.String,System.String)">
            <summary>
            检查节点是否存在
            </summary>
            <param name="key"></param>
            <param name="JsonFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.DI.Context.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.String})">
            <summary>
            初始化一个 <see cref="T:RsCode.DI.Context" /> 类
            </summary>
            <param name="types">The types to scan by extensions.</param>
            <param name="data">The data dictionary shared with all starter modules.</param>
            <param name="logWriter">The <see langword="delegate" /> where log messages will be written.</param>
        </member>
        <member name="P:RsCode.DI.Context.ServiceProvider">
             <summary>
             服务提供者
            </summary>
        </member>
        <member name="P:RsCode.DI.Context.Types">
            <summary>
            Gets the types to scan by KickStart extensions.
            </summary>
            <value>
            The types to scan.
            </value>
        </member>
        <member name="P:RsCode.DI.Context.Data">
            <summary>
            Gets the data dictionary shared with all starter modules.
            </summary>
            <value>
            The data dictionary shared with all starter modules.
            </value>
        </member>
        <member name="P:RsCode.DI.Context.LogWriter">
            <summary>
            Gets the <see langword="delegate" /> where log messages will be written.
            </summary>
            <value>
            The <see langword="delegate" /> where log messages will be written.
            </value>
        </member>
        <member name="M:RsCode.DI.Context.SetServiceProvider(System.IServiceProvider)">
            <summary>
            Sets the global <see cref="P:KickStart.Kick.Container"/>.
            </summary>
            <param name="serviceProvider">The container adaptor to assign.</param>
        </member>
        <member name="M:RsCode.DI.Context.GetInstancesAssignableFrom``1">
            <summary>
            从指定的泛型类型中获取可分配的实例
            </summary>
            <typeparam name="T">要扫描的类型</typeparam>
            <returns>返回实例集合 <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:RsCode.DI.Context.GetTypesAssignableFrom(System.Type)">
            <summary>
            Gets the types assignable from <paramref name="type"/>.
            </summary>
            <param name="type">The type to determine whether if it can be assigned.</param>
            <returns>An enumerable list of types the are assignable from <paramref name="type"/>.</returns>
        </member>
        <member name="M:RsCode.DI.Context.CreateInstance(System.Type)">
            <summary>
            Create an instance of the specified <paramref name="type"/>.
            </summary>
            <param name="type">The type to create an instance of.</param>
            <returns>An instance of the specified <paramref name="type"/>.</returns>
        </member>
        <member name="M:RsCode.DI.Context.WriteLog(System.Func{System.String})">
            <summary>
            Writes the formatted log message to the underlying log writer.
            </summary>
            <param name="messageFormatter">The message formatter.</param>
        </member>
        <member name="M:RsCode.DI.Context.WriteLog(System.String,System.Object[])">
            <summary>
            Writes the formatted log message to the underlying log writer.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:RsCode.DI.Context.WriteLog(System.String)">
            <summary>
            Writes the message to the underlying log writer.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="F:RsCode.DI.DependencyLifetime.Singleton">
            <summary>
            单例每次都用同一个对象
            </summary>
        </member>
        <member name="F:RsCode.DI.DependencyLifetime.Scoped">
            <summary>
             同一个Lifetime生成的对象是同一个实例
            </summary>
        </member>
        <member name="F:RsCode.DI.DependencyLifetime.Transient">
            <summary>
            每次请求都创建一个新的对象
            </summary>
        </member>
        <member name="T:RsCode.DI.IScopedDependency">
            <summary>
            作用域（Scoped）生命周期服务在每个作用域内被创建一次
            </summary>
        </member>
        <member name="T:RsCode.DI.ISingletonDependency">
            <summary>
            单例（Singleton）生命周期服务在它们第一次被解析时创建，并且每个后续解析将使用相同的实例。
            如果你的应用程序需要单例行为，建议让服务容器管理服务的生命周期而不是在自己的类中实现单例模式和管理对象的生命周期。
            </summary>
        </member>
        <member name="T:RsCode.DI.ITransientDependency">
            <summary>
             瞬时（Transient）生命周期服务在它们每次请求时被创建。
             这一生命周期适合轻量级的，无状态的服务
            </summary>
        </member>
        <member name="M:RsCode.DI.RegistrationUtils.GetImplementedInterfaces(System.Type)">
            <summary>
            获取指定类型的接口
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.DI.RegistrationUtils.GetImplemented``1(System.Reflection.Assembly[])">
            <summary>
            从指定程序集中查询指定接口的所有实现类
            </summary>
            <typeparam name="T">接口类型</typeparam>
            <param name="assemblies"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.DI.RegistrationUtils.GetClassName(System.String)">
            <summary>  
            获取程序集中的实现类对应的多个接口
            </summary>  
            <param name="assemblyName">程序集</param>
        </member>
        <member name="M:RsCode.DI.SequenceExtensions.AppendItem``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Appends the item to the specified sequence.
            </summary>
            <typeparam name="T">The type of element in the sequence.</typeparam>
            <param name="sequence">The sequence.</param>
            <param name="trailingItem">The trailing item.</param>
            <returns>The sequence with an item appended to the end.</returns>
        </member>
        <member name="T:RsCode.DI.ServiceNameAttribute">
            <summary>
            一个接口多个实现时的名称
            </summary>
        </member>
        <member name="P:RsCode.DI.ServiceNameAttribute.Name">
            <summary>
            接口实现的自定义别名
            </summary>
        </member>
        <member name="M:RsCode.ServicesExtensions.AutoRegister(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            自动注入指定名称的程序集，仅适用于
            继承IScopedDependency的 接口的实现
            继承ITransientDependency的接口的实现
            继承ISingletonDependency的接口的实现
            </summary>
            <param name="services"></param>
            <param name="assemblyName">程序集名称</param>
        </member>
        <member name="T:RsCode.Domain.IEntity">
            <summary>
            实体类
            </summary>
        </member>
        <member name="M:RsCode.Domain.IRepository`2.Insert(`0)">
            <summary>
            增加记录
            </summary>
            <param name="poco"></param>
            <returns>自动分配新记录的主键，对于非自动递增表为空。</returns>
        </member>
        <member name="M:RsCode.Domain.IRepository`2.InsertAsync(System.Threading.CancellationToken,`0)">
            <summary>
            增加记录
            </summary>
            <param name="cancellationToken"></param>
            <param name="poco">自动分配新记录的主键，对于非自动递增表为空。</param>
            <returns></returns>
        </member>
        <member name="M:RsCode.Domain.IRepository`2.Update(`0)">
            <summary>
            
            </summary>
            <param name="poco"></param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:RsCode.Domain.IRepository`2.UpdateAsync(`0)">
            <summary>
            
            </summary>
            <param name="poco"></param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:RsCode.Domain.IRepository`2.Delete(`0)">
            <summary>
                Performs an SQL Delete
            </summary>
            <param name="poco">The POCO object specifying the table name and primary key value of the row to be deleted</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="T:RsCode.Domain.Uow.ApplicationDbContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:RsCode.Domain.Uow.ApplicationDbContext.Current">
            <summary>
            当前数据库连接
            </summary>
        </member>
        <member name="M:RsCode.Domain.Uow.ApplicationDbContext.#ctor(System.Collections.Generic.IEnumerable{PetaPoco.IDatabase})">
            <summary>
            数据库连接
            </summary>
            <param name="_databases"></param>
        </member>
        <member name="M:RsCode.Domain.Uow.ApplicationDbContext.GetDatabase(System.String)">
            <summary>
            指定数据库连接字符串key,获取数据库配置
            </summary>
            <param name="connName">默认值为DefaultConnection</param>
            <returns></returns>
        </member>
        <member name="M:RsCode.Domain.Uow.ApplicationDbContext.InsertAsync``1(``0)">
            <summary>
            新增记录,返回主键值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.Domain.Uow.ApplicationDbContext.SaveAsync``1(``0)">
            <summary>
            保存记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.Domain.Uow.OneToManyRelator`2.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="leftListFiledName">主表集合字段名称</param> 
            <param name="foreignKeyName">辅表与主表关联的字段名称,为空时,值为主表主键</param>
        </member>
        <member name="M:RsCode.Domain.Uow.OneToManyRelator`2.MapIt``1(`0,`1)">
            <summary>
            
            </summary>
            <typeparam name="T">主表主键类型</typeparam>
            <param name="t1">主表</param>
            <param name="t2">辅表</param>
            <returns></returns>
        </member>
        <member name="P:RsCode.Domain.Uow.UnitOfWorkOptions.DefaultConnection">
            <summary>
            连接字符串名称
            </summary>
        </member>
        <member name="M:RsCode.DbServiceCollectionExtensions.AddDatabase``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,PetaPoco.IMapper)">
            <summary>
            
            </summary>
            <typeparam name="TDatabaseProvider"></typeparam>
            <param name="services"></param>
            <param name="connString">数据库连接字符串</param>
        </member>
        <member name="M:RsCode.DbServiceCollectionExtensions.AddDatabase(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{PetaPoco.Database})">
            <summary>
            添加数据库
            </summary>
            <param name="services"></param>
            <param name="func"></param>
        </member>
        <member name="T:RsCode.RsCodeMapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:RsCode.IApplicationDbContext.GetAsync``1(System.Object)">
            <summary>
            获取单条记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="primaryKeyValue">主键值</param>
            <returns></returns>
        </member>
        <member name="M:RsCode.IApplicationDbContext.InsertAsync``1(``0)">
            <summary>
            新增记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns>返回新增记录主键值</returns>
        </member>
        <member name="M:RsCode.IApplicationDbContext.SaveAsync``1(``0)">
            <summary>
            保存记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.IApplicationDbContext.DeleteAsync``1(System.Object)">
            <summary>
            删除记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="primaryKeyValue"></param>
            <returns>返回删除记录条数</returns>
        </member>
        <member name="T:RsCode.AspNetCore.AppException">
            <summary>
            
            </summary>
        </member>
        <member name="M:RsCode.AspNetCore.AppException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:RsCode.AspNetCore.AppException.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="status"></param>
            <param name="msg"></param>
        </member>
        <member name="P:RsCode.AspNetCore.AppException.Status">
            <summary>
            
            </summary>
        </member>
        <member name="P:RsCode.AspNetCore.AppException.Message">
            <summary>
            响应消息
            </summary>
        </member>
        <member name="T:RsCode.ReturnInfo">
            <summary>
            响应客户端的信息
            </summary>
        </member>
        <member name="P:RsCode.ReturnInfo.Success">
            <summary>
            操作成功状态
            </summary>
        </member>
        <member name="P:RsCode.ReturnInfo.code">
            <summary>
            对应操作代码
            </summary>
        </member>
        <member name="P:RsCode.ReturnInfo.Msg">
            <summary>
            服务器返回的信息
            </summary>
        </member>
        <member name="P:RsCode.ReturnInfo.TargetUrl">
            <summary>
            这提供了一种服务器根据需要 将客户端重定向到另一个url的方法
            </summary>
        </member>
        <member name="P:RsCode.ReturnInfo.Result">
            <summary>
            服务器返回的数据对像
            </summary>
        </member>
        <member name="T:RsCode.Helper.IdGenerate">
            <summary>
            类似 Twitter Snowflake(41 + 10 + 12) 算法的 Id 生成器。
            格式：{32 位时间戳, 0-10 位机器码, 0-12 位递增系列号}。
            注意：程序启动前请确保系统时间正确。
            </summary>
        </member>
        <member name="M:RsCode.Helper.IdGenerate.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            The constructor of <see cref="!:IdGen"/>.
            </summary>
            <param name="machineId">当前机器码</param>
            <param name="machineIdBits">机器码位数（0-10之间）</param>
            <param name="sequenceBits">
            序列号位数（0-20之间）
            注意：
            1. 并发量越大，此值也要越大，例如：10 可以 1 秒内生成 2^10=1024 个 ID。
            2. 每台机器此参数务必相同。
            </param>
        </member>
        <member name="M:RsCode.Helper.IdGenerate.NewId">
            <summary>
            Generate a new sequence id.
            </summary>
            <returns>The generated id.</returns>
        </member>
        <member name="M:RsCode.Helper.IdGenerate.NewSequenceId">
            <summary>
            生成新的ID
            </summary>
            <returns>ID</returns>
        </member>
        <member name="T:RsCode.Helper.XmlHelper">
            <summary>
            xml helper
            </summary>
        </member>
        <member name="M:RsCode.Helper.XmlHelper.DeserializeFromXML(System.Type,System.String)">
            <summary>
            xml转对象
            </summary>
            <param name="type"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.Helper.XmlHelper.SerializeToXml(System.Object,System.String)">
            <summary>
            xml序列化
            </summary>
            <param name="obj"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:RsCode.HttpHelper">
            <summary>
            针对RsCode WebApi响应做的封装
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RsCode.HttpHelper.GetPageAsync``1(System.String,System.String)" -->
        <member name="M:RsCode.HttpHelper.GetUrlParamValue(System.String,System.String)">
            <summary>
            获取地址栏参数值
            </summary>
            <param name="url"></param>
            <param name="urlParamName"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.RandomHelper.RandAmount(System.Double,System.Int32)">
            <summary>
            正态随机分配额度
            </summary>
            <param name="totalAmount">要分配的额度</param>
            <param name="count">总份数</param>
            <returns></returns>
        </member>
        <member name="M:RsCode.RandomHelper.GenerateCheckCodeNum(System.Int32)">
            <summary>
            Generates the check code with unique number.
            </summary>
            <returns>The check code number.</returns>
            <param name="codeCount">Code count. Max 10</param>
        </member>
        <member name="M:RsCode.RandomHelper.GenerateCheckCode(System.Int32)">
            <summary>
            随机生成字符串（数字和字母混和）
            </summary>
            <returns>The check code.</returns>
            <param name="CodeCount">Code lenght.</param>
        </member>
        <member name="M:RsCode.RandomHelper.GetRandomCode(System.Char[],System.Int32)">
            <summary>
            Gets the random code.
            </summary>
            <returns>The random code.</returns>
            <param name="CharList">All char want to generate.</param>
            <param name="CodeLength">Code lenght.</param>
        </member>
        <member name="M:RsCode.SecureHelper.AESDecrypt(System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="decryptStr">要解密的字符串</param>
            <param name="decryptKey">解密使用的key</param>
            <returns></returns>
        </member>
        <member name="M:RsCode.SecureHelper.AESEncrypt(System.String,System.String)">
            <summary>
            加密
            </summary>
            <param name="encryptStr">要加密的字符串</param>
            <param name="encryptKey">加密使用的key</param>
            <returns></returns>
        </member>
        <member name="M:RsCode.VerifyCodeHelper.CreateNumberVerifyCode(System.Int32)">
            <summary>
            1.数字验证码
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.VerifyCodeHelper.CreateAbcVerifyCode(System.Int32)">
            <summary>
            2.字母验证码
            </summary>
            <param name="length">字符长度</param>
            <returns>验证码字符</returns>
        </member>
        <member name="M:RsCode.VerifyCodeHelper.CreateMixVerifyCode(System.Int32)">
            <summary>
            3.混合验证码
            </summary>
            <param name="length">字符长度</param>
            <returns>验证码字符</returns>
        </member>
        <member name="M:RsCode.VerifyCodeHelper.CreateVerifyCodeAsync(RsCode.VerifyCodeHelper.VerifyCodeType)">
            <summary>
            产生验证码（随机产生4-6位）
            </summary>
            <param name="type">验证码类型：数字，字符，符合</param>
            <returns></returns>
        </member>
        <member name="M:RsCode.VerifyCodeHelper.CreateBitmapByImgVerifyCode(System.String,System.Int32,System.Int32)">
            <summary>
            验证码图片 => Bitmap
            </summary>
            <param name="verifyCode">验证码</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:RsCode.VerifyCodeHelper.CreateByteByImgVerifyCode(System.String,System.Int32,System.Int32)">
            <summary>
            验证码图片 => byte[]
            </summary>
            <param name="verifyCode">验证码</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:RsCode.IBackgroundTaskQueue.QueueWorkItemAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.ValueTask})">
            <summary>
            添加任务到队列
            </summary>
            <param name="workItem"></param>
            <returns></returns>
        </member>
        <member name="M:RsCode.IBackgroundTaskQueue.DequeueWorkItemAsync(System.Threading.CancellationToken)">
            <summary>
            任务出列
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:RsCode.CallContext`1">
            <summary>
            可用于跨线程保存数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:RsCode.CallContext`1.SetData(System.String,`0)">
            <summary>
            Stores a given object and associates it with the specified name.
            </summary>
            <param name="name">The name with which to associate the new item in the call context.</param>
            <param name="data">The object to store in the call context.</param>
        </member>
        <member name="M:RsCode.CallContext`1.GetData(System.String)">
            <summary>
            Retrieves an object with the specified name from the <see cref="!:CallContext"/>.
            </summary>
            <typeparam name="T">The type of the data being retrieved. Must match the type used when the <paramref name="name"/> was set via <see cref="!:SetData&lt;T&gt;(string, T)"/>.</typeparam>
            <param name="name">The name of the item in the call context.</param>
            <returns>The object in the call context associated with the specified name, or a default value for <typeparamref name="T"/> if none is found.</returns>
        </member>
        <member name="T:RsCode.ChannelHelper`1">
            <summary>
            线程通道容器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:RsCode.ChannelHelper`1.GetChannel(System.Int32)">
            <summary>
            获取通道
            </summary>
            <param name="capacity">通道可存储的最大条目数。</param>
            <returns></returns>
        </member>
        <member name="T:Rswl.RsaHelper.RsaKeyConvert">
            <summary>
            RSA Key Convert Class
            Author:Zhiqiang Li
            </summary>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PublicKeyPemToXml(System.String)">
            <summary>
            Public Key Convert pem->xml
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PublicKeyXmlToPem(System.String)">
            <summary>
            Public Key Convert xml->pem
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PrivateKeyPkcs1ToXml(System.String)">
            <summary>
            Private Key Convert Pkcs1->xml
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PrivateKeyXmlToPkcs1(System.String)">
            <summary>
            Private Key Convert xml->Pkcs1
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PrivateKeyPkcs8ToXml(System.String)">
            <summary>
            Private Key Convert Pkcs8->xml
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PrivateKeyXmlToPkcs8(System.String)">
            <summary>
            Private Key Convert xml->Pkcs8
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PrivateKeyPkcs1ToPkcs8(System.String)">
            <summary>
            Private Key Convert Pkcs1->Pkcs8
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyConvert.PrivateKeyPkcs8ToPkcs1(System.String)">
            <summary>
            Private Key Convert Pkcs8->Pkcs1
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyGenerator.XmlKey(System.Int32)">
            <summary>
            Generate XML Format RSA Key. Result: Index 0 is the private key and index 1 is the public key
            </summary>
            <param name="keySize">Key Size.Unit: bits</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyGenerator.Pkcs1Key(System.Int32,System.Boolean)">
            <summary>
            Generate RSA key in Pkcs1 format. Result: Index 0 is the private key and index 1 is the public key
            </summary>
            <param name="keySize">Key Size.Unit: bits</param>
            <param name="format">Whether the format is true If it is standard pem file format</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaKeyGenerator.Pkcs8Key(System.Int32,System.Boolean)">
            <summary>
            Generate Pkcs8 format RSA key. Result: Index 0 is the private key and index 1 is the public key
            </summary>
            <param name="keySize">Key Size.Unit: bits</param>
            <param name="format">Whether the format is true If it is standard pem file format</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPemFormatHelper.Pkcs1PrivateKeyFormat(System.String)">
            <summary>
            Format Pkcs1 format private key
            Author:Zhiqiang Li
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPemFormatHelper.Pkcs1PrivateKeyFormatRemove(System.String)">
            <summary>
            Remove the Pkcs1 format private key format
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPemFormatHelper.Pkcs8PrivateKeyFormat(System.String)">
            <summary>
            Format Pkcs8 format private key
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPemFormatHelper.Pkcs8PrivateKeyFormatRemove(System.String)">
            <summary>
            Remove the Pkcs8 format private key format
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPemFormatHelper.PublicKeyFormat(System.String)">
            <summary>
            Format public key
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPemFormatHelper.PublicKeyFormatRemove(System.String)">
            <summary>
            Public key format removed
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPkcs1Util.CreateRsapFromPublicKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format public key
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPkcs1Util.CreateRsapFromPrivateKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format private key
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPkcs8Util.CreateRsapFromPublicKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format public key
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaPkcs8Util.CreateRsapFromPrivateKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format private key
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RSAUtilBase.Encrypt(System.String,System.Security.Cryptography.RSAEncryptionPadding)">
            <summary>
            RSA public key encryption
            </summary>
            <param name="data">Need to encrypt data</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RSAUtilBase.EncryptBigData(System.String,System.Security.Cryptography.RSAEncryptionPadding,System.Char)">
            <summary>
            [Not recommended] RSA public key split encryption
            <para>RSA encryption does not support too large data. In this case, symmetric encryption should be used, and RSA is used to encrypt symmetrically encrypted passwords.</para>
            </summary>
            <param name="dataStr">Need to encrypt data</param>
            <param name="connChar">Encrypted result link character</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RSAUtilBase.Decrypt(System.String,System.Security.Cryptography.RSAEncryptionPadding)">
            <summary>
            RSA private key  decrypted
            </summary>
            <param name="data">Need to decrypt the data</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RSAUtilBase.DecryptBigData(System.String,System.Security.Cryptography.RSAEncryptionPadding,System.Char)">
            <summary>
            [Not recommended] RSA private key split decrypted
            <para>RSA encryption does not support too large data. In this case, symmetric encryption should be used, and RSA is used to encrypt symmetrically encrypted passwords.</para>
            </summary>
            <param name="connChar">Encrypted result link character</param>
            <param name="dataStr">Need to decrypt the data</param>
            <param name="padding">Padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RSAUtilBase.SignData(System.String,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
            <summary>
            Use private key for data signing
            </summary>
            <param name="data">Need to sign data</param>
            <param name="hashAlgorithmName">Signed hash algorithm name</param>
            <param name="padding">Signature padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RSAUtilBase.SignDataGetBytes(System.String,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
            <summary>
            Use private key for data signing
            </summary>
            <param name="data">Need to sign data</param>
            <param name="hashAlgorithmName">Signed hash algorithm name</param>
            <param name="padding">Signature padding algorithm</param>
            <returns>Sign bytes</returns>
        </member>
        <member name="M:Rswl.RsaHelper.RSAUtilBase.VerifyData(System.String,System.String,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
            <summary>
            Use public key to verify data signature
            </summary>
            <param name="data">Need to verify the signature data</param>
            <param name="sign">sign</param>
            <param name="hashAlgorithmName">Signed hash algorithm name</param>
            <param name="padding">Signature padding algorithm</param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaXmlUtil.#ctor(System.Text.Encoding,System.String,System.String,System.Int32)">
            <summary>
            RSA encryption
            SHA256 hash algorithm to use the key length of at least 2048
            </summary>
            <param name="dataEncoding">Data coding</param>
            <param name="keySize">Key length in bits:</param>
            <param name="privateKey">private Key</param>
            <param name="publicKey">public Key</param>
        </member>
        <member name="M:Rswl.RsaHelper.RsaXmlUtil.CreateRsapFromPrivateKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format private key
            </summary>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="M:Rswl.RsaHelper.RsaXmlUtil.CreateRsapFromPublicKey(System.String)">
            <summary>
            Create an RSA parameter based on the xml format public key
            </summary>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="T:Ganss.XSS.PostProcessDomEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.PostProcessDom"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.PostProcessDomEventArgs.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="M:Ganss.XSS.PostProcessDomEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ganss.XSS.PostProcessDomEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Ganss.XSS.PostProcessNodeEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.PostProcessNode"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.PostProcessNodeEventArgs.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Ganss.XSS.PostProcessNodeEventArgs.Node">
            <summary>
            Gets or sets the DOM node to be processed.
            </summary>
            <value>
            The DOM node.
            </value>
        </member>
        <member name="P:Ganss.XSS.PostProcessNodeEventArgs.ReplacementNodes">
            <summary>
            Gets the replacement nodes. Leave empty if no replacement should occur.
            </summary>
            <value>
            The replacement nodes.
            </value>
        </member>
        <member name="M:Ganss.XSS.PostProcessNodeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ganss.XSS.PostProcessNodeEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Ganss.XSS.RemovingTagEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingTag"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingTagEventArgs.Tag">
            <summary>
            Gets or sets the tag to be removed.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingTagEventArgs.Reason">
            <summary>
            Gets or sets the reason why the tag will be removed
            </summary>
            <value>
            The reason.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemovingAttributeEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingAttribute"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingAttributeEventArgs.Tag">
            <summary>
            Gets or sets the tag containing the attribute to be removed.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingAttributeEventArgs.Attribute">
            <summary>
            Gets or sets the attribute to be removed.
            </summary>
            <value>
            The attribute.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingAttributeEventArgs.Reason">
            <summary>
            Gets or sets the reason why the attribute will be removed
            </summary>
            <value>
            The reason.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemovingStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingStyle"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingStyleEventArgs.Tag">
            <summary>
            Gets or sets the tag containing the style to be removed.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingStyleEventArgs.Style">
            <summary>
            Gets or sets the style to be removed.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingStyleEventArgs.Reason">
            <summary>
            Gets or sets the reason why the style will be removed
            </summary>
            <value>
            The reason.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemovingAtRuleEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingAtRule"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingAtRuleEventArgs.Tag">
            <summary>
            Gets or sets the tag containing the at-rule to be removed.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingAtRuleEventArgs.Rule">
            <summary>
            Gets or sets the rule to be removed.
            </summary>
            <value>
            The rule.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemovingCommentEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingComment"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingCommentEventArgs.Comment">
            <summary>
            Gets or sets the comment node to be removed.
            </summary>
            <value>
            The comment node.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemovingCssClassEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.RemovingCssClass"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.RemovingCssClassEventArgs.Tag">
            <summary>
            Gets or sets the tag containing the CSS class to be removed.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingCssClassEventArgs.CssClass">
            <summary>
            Gets or sets the CSS class to be removed.
            </summary>
            <value>
            The CSS class.
            </value>
        </member>
        <member name="P:Ganss.XSS.RemovingCssClassEventArgs.Reason">
            <summary>
            Gets or sets the reason why the CSS class will be removed.
            </summary>
            <value>
            The reason.
            </value>
        </member>
        <member name="T:Ganss.XSS.FilterUrlEventArgs">
            <summary>
            Provides data for the <see cref="E:Ganss.XSS.HtmlSanitizer.FilterUrl"/> event.
            </summary>
        </member>
        <member name="P:Ganss.XSS.FilterUrlEventArgs.OriginalUrl">
            <summary>
            Gets or sets the original URL.
            </summary>
            <value>
            The original URL.
            </value>
        </member>
        <member name="P:Ganss.XSS.FilterUrlEventArgs.SanitizedUrl">
            <summary>
            Gets or sets the sanitized URL.
            </summary>
            <value>
            The sanitized URL. If it is null, it will be removed.
            </value>
        </member>
        <member name="T:Ganss.XSS.HtmlFormatter">
            <summary>
            HTML5 markup formatter. Identical to <see cref="T:AngleSharp.Html.HtmlMarkupFormatter"/> except for &lt; and &gt; which are
            encoded in attribute values.
            </summary>
        </member>
        <member name="F:Ganss.XSS.HtmlFormatter.Instance">
            <summary>
            An instance of <see cref="T:Ganss.XSS.HtmlFormatter"/>.
            </summary>
        </member>
        <member name="T:Ganss.XSS.HtmlSanitizer">
            <summary>
            Cleans HTML documents and fragments from constructs that can lead to <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS attacks</a>.
            </summary>
            <remarks>
            XSS attacks can occur at several levels within an HTML document or fragment:
            <list type="bullet">
            <item>HTML Tags (e.g. the &lt;script&gt; tag)</item>
            <item>HTML attributes (e.g. the "onload" attribute)</item>
            <item>CSS styles (url property values)</item>
            <item>malformed HTML or HTML that exploits parser bugs in specific browsers</item>
            </list>
            <para>
            The HtmlSanitizer class addresses all of these possible attack vectors by using a sophisticated HTML parser (<a href="https://github.com/AngleSharp/AngleSharp">AngleSharp</a>).
            </para>
            <para>
            In order to facilitate different use cases, HtmlSanitizer can be customized at the levels mentioned above:
            <list type="bullet">
            <item>You can specify the allowed HTML tags through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedTags"/>. All other tags will be stripped.</item>
            <item>You can specify the allowed HTML attributes through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedAttributes"/>. All other attributes will be stripped.</item>
            <item>You can specify the allowed CSS property names through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedCssProperties"/>. All other styles will be stripped.</item>
            <item>You can specify the allowed URI schemes through the property <see cref="P:Ganss.XSS.HtmlSanitizer.AllowedSchemes"/>. All other URIs will be stripped.</item>
            <item>You can specify the HTML attributes that contain URIs (such as "src", "href" etc.) through the property <see cref="P:Ganss.XSS.HtmlSanitizer.UriAttributes"/>.</item>
            </list>
            </para>
            </remarks>
            <example>
            <code>
            <![CDATA[
            var sanitizer = new HtmlSanitizer();
            var html = @"<script>alert('xss')</script><div onload=""alert('xss')"" style=""background-color: test"">Test<img src=""test.gif"" style=""background-image: url(javascript:alert('xss')); margin: 10px""></div>";
            var sanitized = sanitizer.Sanitize(html, "http://www.example.com");
            // -> "<div style="background-color: test">Test<img style="margin: 10px" src="http://www.example.com/test.gif"></div>"
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ganss.XSS.HtmlSanitizer"/> class.
            </summary>
            <param name="allowedTags">The allowed tag names such as "a" and "div". When <c>null</c>, uses <see cref="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedTags"/></param>
            <param name="allowedSchemes">The allowed HTTP schemes such as "http" and "https". When <c>null</c>, uses <see cref="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedSchemes"/></param>
            <param name="allowedAttributes">The allowed HTML attributes such as "href" and "alt". When <c>null</c>, uses <see cref="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedAttributes"/></param>
            <param name="uriAttributes">The HTML attributes that can contain a URI such as "href". When <c>null</c>, uses <see cref="P:Ganss.XSS.HtmlSanitizer.DefaultUriAttributes"/></param>
            <param name="allowedCssProperties">The allowed CSS properties such as "font" and "margin". When <c>null</c>, uses <see cref="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedCssProperties"/></param>
            <param name="allowedCssClasses">CSS class names which are allowed in the value of a class attribute. When <c>null</c>, any class names are allowed.</param>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultKeepChildNodes">
            <summary>
            Gets or sets the default value indicating whether to keep child nodes of elements that are removed. Default is false.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.KeepChildNodes">
            <summary>
            Gets or sets a value indicating whether to keep child nodes of elements that are removed. Default is <see cref="P:Ganss.XSS.HtmlSanitizer.DefaultKeepChildNodes"/>.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultHtmlParserFactory">
            <summary>
            Gets or sets the default <see cref="T:System.Func`1"/> object that creates the parser used for parsing the input.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.HtmlParserFactory">
            <summary>
            Gets or sets the <see cref="T:System.Func`1"/> object the creates the parser used for parsing the input.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultOutputFormatter">
            <summary>
            Gets or sets the default <see cref="T:AngleSharp.IMarkupFormatter"/> object used for generating output. Default is <see cref="F:Ganss.XSS.HtmlFormatter.Instance"/>.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.OutputFormatter">
            <summary>
            Gets or sets the <see cref="T:AngleSharp.IMarkupFormatter"/> object used for generating output. Default is <see cref="P:Ganss.XSS.HtmlSanitizer.DefaultOutputFormatter"/>.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedAtRules">
            <summary>
            Gets or sets the allowed CSS at-rules such as "@media" and "@font-face".
            </summary>
            <value>
            The allowed CSS at-rules.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedAtRules">
            <summary>
            The default allowed CSS at-rules.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedSchemes">
            <summary>
            Gets or sets the allowed HTTP schemes such as "http" and "https".
            </summary>
            <value>
            The allowed HTTP schemes.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedSchemes">
            <summary>
            The default allowed URI schemes.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedTags">
            <summary>
            Gets or sets the allowed HTML tag names such as "a" and "div".
            </summary>
            <value>
            The allowed tag names.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedTags">
            <summary>
            The default allowed HTML tag names.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedAttributes">
            <summary>
            Gets or sets the allowed HTML attributes such as "href" and "alt".
            </summary>
            <value>
            The allowed HTML attributes.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowDataAttributes">
            <summary>
            Allow all HTML5 data attributes; the attributes prefixed with data-
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedAttributes">
            <summary>
            The default allowed HTML attributes.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.UriAttributes">
            <summary>
            Gets or sets the HTML attributes that can contain a URI such as "href".
            </summary>
            <value>
            The URI attributes.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultUriAttributes">
            <summary>
            The default URI attributes.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedCssProperties">
            <summary>
            Gets or sets the allowed CSS properties such as "font" and "margin".
            </summary>
            <value>
            The allowed CSS properties.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DefaultAllowedCssProperties">
            <summary>
            The default allowed CSS properties.
            </summary>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.DisallowCssPropertyValue">
            <summary>
            Gets or sets a regex that must not match for legal CSS property values.
            </summary>
            <value>
            The regex.
            </value>
        </member>
        <member name="P:Ganss.XSS.HtmlSanitizer.AllowedCssClasses">
            <summary>
            Gets or sets the allowed CSS classes.
            </summary>
            <value>
            The allowed CSS classes.
            </value>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.PostProcessDom">
            <summary>
            Occurs after sanitizing the document and post processing nodes.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.PostProcessNode">
            <summary>
            Occurs for every node after sanitizing.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingTag">
            <summary>
            Occurs before a tag is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingAttribute">
            <summary>
            Occurs before an attribute is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingStyle">
            <summary>
            Occurs before a style is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingAtRule">
            <summary>
            Occurs before an at-rule is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingComment">
            <summary>
            Occurs before a comment is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.RemovingCssClass">
            <summary>
            Occurs before a CSS class is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.HtmlSanitizer.FilterUrl">
            <summary>
            Occurs when a URL is being sanitized.
            </summary>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnPostProcessDom(Ganss.XSS.PostProcessDomEventArgs)">
            <summary>
            Raises the <see cref="E:PostProcessDom" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.PostProcessDomEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnPostProcessNode(Ganss.XSS.PostProcessNodeEventArgs)">
            <summary>
            Raises the <see cref="E:PostProcessNode" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.PostProcessNodeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingTag(Ganss.XSS.RemovingTagEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingTag" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingTagEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingAttribute(Ganss.XSS.RemovingAttributeEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingAttribute" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingAttributeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingStyle(Ganss.XSS.RemovingStyleEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingStyle" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingStyleEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingAtRule(Ganss.XSS.RemovingAtRuleEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingAtRule" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingAtRuleEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingComment(Ganss.XSS.RemovingCommentEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingComment" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingCommentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Ganss.XSS.HtmlSanitizer.DefaultDisallowedCssPropertyValue">
            <summary>
            The default regex for disallowed CSS property values.
            </summary>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnRemovingCssClass(Ganss.XSS.RemovingCssClassEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingCSSClass" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.RemovingCssClassEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.OnFilteringUrl(Ganss.XSS.FilterUrlEventArgs)">
            <summary>
            Raises the <see cref="E:RemovingUrl" /> event.
            </summary>
            <param name="e">The <see cref="T:Ganss.XSS.FilterUrlEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.GetAllNodes(AngleSharp.Dom.INode)">
            <summary>
            Return all nested subnodes of a node.
            </summary>
            <param name="dom">The root node.</param>
            <returns>All nested subnodes.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.Sanitize(System.String,System.String,AngleSharp.IMarkupFormatter)">
            <summary>
            Sanitizes the specified HTML body fragment. If a document is given, only the body part will be returned.
            </summary>
            <param name="html">The HTML body fragment to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <param name="outputFormatter">The formatter used to render the DOM. Using the <see cref="P:Ganss.XSS.HtmlSanitizer.OutputFormatter"/> if null.</param>
            <returns>The sanitized HTML body fragment.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.SanitizeDom(System.String,System.String)">
            <summary>
            Sanitizes the specified HTML body fragment. If a document is given, only the body part will be returned.
            </summary>
            <param name="html">The HTML body fragment to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <returns>The sanitized HTML Document.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.SanitizeDocument(System.String,System.String,AngleSharp.IMarkupFormatter)">
            <summary>
            Sanitizes the specified HTML document. Even if only a fragment is given, a whole document will be returned.
            </summary>
            <param name="html">The HTML document to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <param name="outputFormatter">The formatter used to render the DOM. Using the <see cref="P:Ganss.XSS.HtmlSanitizer.OutputFormatter"/> if null.</param>
            <returns>The sanitized HTML document.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.SanitizeDocument(System.IO.Stream,System.String,AngleSharp.IMarkupFormatter)">
            <summary>
            Sanitizes the specified HTML document. Even if only a fragment is given, a whole document will be returned.
            </summary>
            <param name="html">The HTML document to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <param name="outputFormatter">The formatter used to render the DOM. Using the <see cref="P:Ganss.XSS.HtmlSanitizer.OutputFormatter"/> if null.</param>
            <returns>The sanitized HTML document.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.CreateParser">
            <summary>
            Creeates an instance of <see cref="T:AngleSharp.Html.Parser.HtmlParser"/>.
            </summary>
            <returns>An instance of <see cref="T:AngleSharp.Html.Parser.HtmlParser"/>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveComments(AngleSharp.Dom.INode)">
            <summary>
            Removes all comment nodes from a list of nodes.
            </summary>
            <param name="context">The node within which to remove comments.</param>
            <returns><c>true</c> if any comments were removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.DoPostProcess(AngleSharp.Html.Dom.IHtmlDocument,AngleSharp.Dom.INode)">
            <summary>
            Performs post processing on all nodes in the document.
            </summary>
            <param name="dom">The HTML document.</param>
            <param name="context">The node within which to post process all nodes.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.IsUriAttribute(AngleSharp.Dom.IAttr)">
            <summary>
            Determines whether the specified attribute can contain a URI.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if the attribute can contain a URI; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.IsAllowedTag(AngleSharp.Dom.IElement)">
            <summary>
            Determines whether the specified tag is allowed.
            </summary>
            <param name="tag">The tag.</param>
            <returns><c>true</c> if the tag is allowed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.IsAllowedAttribute(AngleSharp.Dom.IAttr)">
            <summary>
            Determines whether the specified attribute is allowed.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if the attribute is allowed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.SanitizeStyle(AngleSharp.Dom.IElement,System.String)">
            <summary>
            Sanitizes the style.
            </summary>
            <param name="element">The element.</param>
            <param name="baseUrl">The base URL.</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.DecodeCss(System.String)">
            <summary>
            Decodes CSS unicode escapes and removes comments.
            </summary>
            <param name="css">The CSS string.</param>
            <returns>The decoded CSS string.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.GetSafeIri(System.String)">
            <summary>
            Tries to create a safe <see cref="T:Ganss.XSS.Iri"/> object from a string.
            </summary>
            <param name="url">The URL.</param>
            <returns>The <see cref="T:Ganss.XSS.Iri"/> object or null if no safe <see cref="T:Ganss.XSS.Iri"/> can be created.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.SanitizeUrl(System.String,System.String)">
            <summary>
            Sanitizes a URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against (empty or null for no resolution).</param>
            <returns>The sanitized URL or null if no safe URL can be created.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveTag(AngleSharp.Dom.IElement,Ganss.XSS.RemoveReason)">
            <summary>
            Removes a tag from the document.
            </summary>
            <param name="tag">Tag to be removed</param>
            <param name="reason">Reason for removal</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveAttribute(AngleSharp.Dom.IElement,AngleSharp.Dom.IAttr,Ganss.XSS.RemoveReason)">
            <summary>
            Removes an attribute from the document.
            </summary>
            <param name="tag">Tag the attribute belongs to</param>
            <param name="attribute">Attribute to be removed</param>
            <param name="reason">Reason for removal</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveStyle(AngleSharp.Dom.IElement,AngleSharp.Css.Dom.ICssStyleDeclaration,AngleSharp.Css.Dom.ICssProperty,Ganss.XSS.RemoveReason)">
            <summary>
            Removes a style from the document.
            </summary>
            <param name="tag">Tag the style belongs to</param>
            <param name="styles">Style rule that contains the style to be removed</param>
            <param name="style">Style to be removed</param>
            <param name="reason">Reason for removal</param>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveAtRule(AngleSharp.Dom.IElement,AngleSharp.Css.Dom.ICssRule)">
            <summary>
            Removes an at-rule from the document.
            </summary>
            <param name="tag">Tag the style belongs to</param>
            <param name="rule">Rule to be removed</param>
            <returns>true, if the rule can be removed; false, otherwise.</returns>
        </member>
        <member name="M:Ganss.XSS.HtmlSanitizer.RemoveCssClass(AngleSharp.Dom.IElement,System.String,Ganss.XSS.RemoveReason)">
            <summary>
            Removes a CSS class from a class attribute.
            </summary>
            <param name="tag">Tag the style belongs to</param>
            <param name="cssClass">Class to be removed</param>
            <param name="reason">Reason for removal</param>
        </member>
        <member name="T:Ganss.XSS.IHtmlSanitizer">
            <summary>
            Enables an inheriting class to implement an HtmlSanitizer class, which cleans HTML documents and fragments
            from constructs that can lead to <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS attacks</a>.
            </summary>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.KeepChildNodes">
            <summary>
            Gets or sets a value indicating whether to keep child nodes of elements that are removed.
            </summary>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.HtmlParserFactory">
            <summary>
            Gets or sets the <see cref="T:System.Func`1"/> object the creates the parser used for parsing the input.
            </summary>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.OutputFormatter">
            <summary>
            Gets or sets the <see cref="T:AngleSharp.IMarkupFormatter"/> object used for generating output.
            </summary>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.AllowedAtRules">
            <summary>
            Gets or sets the allowed CSS at-rules such as "@media" and "@font-face".
            </summary>
            <value>
            The allowed CSS at-rules.
            </value>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.AllowedSchemes">
            <summary>
            Gets or sets the allowed HTTP schemes such as "http" and "https".
            </summary>
            <value>
            The allowed HTTP schemes.
            </value>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.AllowedTags">
            <summary>
            Gets or sets the allowed HTML tag names such as "a" and "div".
            </summary>
            <value>
            The allowed tag names.
            </value>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.AllowedAttributes">
            <summary>
            Gets or sets the allowed HTML attributes such as "href" and "alt".
            </summary>
            <value>
            The allowed HTML attributes.
            </value>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.AllowDataAttributes">
            <summary>
            Allow all HTML5 data attributes; the attributes prefixed with data-
            </summary>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.UriAttributes">
            <summary>
            Gets or sets the HTML attributes that can contain a URI such as "href".
            </summary>
            <value>
            The URI attributes.
            </value>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.AllowedCssProperties">
            <summary>
            Gets or sets the allowed CSS properties such as "font" and "margin".
            </summary>
            <value>
            The allowed CSS properties.
            </value>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.DisallowCssPropertyValue">
            <summary>
            Gets or sets a regex that must not match for legal CSS property values.
            </summary>
            <value>
            The regex.
            </value>
        </member>
        <member name="P:Ganss.XSS.IHtmlSanitizer.AllowedCssClasses">
            <summary>
            Gets or sets the allowed CSS classes.
            </summary>
            <value>
            The allowed CSS classes.
            </value>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.PostProcessDom">
            <summary>
            Occurs after sanitizing the document and post processing nodes.
            </summary>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.PostProcessNode">
            <summary>
            Occurs for every node after sanitizing.
            </summary>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.RemovingTag">
            <summary>
            Occurs before a tag is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.RemovingAttribute">
            <summary>
            Occurs before an attribute is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.RemovingStyle">
            <summary>
            Occurs before a style is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.RemovingAtRule">
            <summary>
            Occurs before an at-rule is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.RemovingComment">
            <summary>
            Occurs before a comment is removed.
            </summary>
        </member>
        <member name="E:Ganss.XSS.IHtmlSanitizer.RemovingCssClass">
            <summary>
            Occurs before a CSS class is removed.
            </summary>
        </member>
        <member name="M:Ganss.XSS.IHtmlSanitizer.Sanitize(System.String,System.String,AngleSharp.IMarkupFormatter)">
            <summary>
            Sanitizes the specified HTML.
            </summary>
            <param name="html">The HTML to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <param name="outputFormatter">The formatter used to render the DOM. Using the default formatter if null.</param>
            <returns>The sanitized HTML.</returns>
        </member>
        <member name="M:Ganss.XSS.IHtmlSanitizer.SanitizeDom(System.String,System.String)">
            <summary>
            Sanitizes the specified HTML body fragment. If a document is given, only the body part will be returned.
            </summary>
            <param name="html">The HTML body fragment to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <returns>The sanitized HTML Document.</returns>
        </member>
        <member name="M:Ganss.XSS.IHtmlSanitizer.SanitizeDocument(System.String,System.String,AngleSharp.IMarkupFormatter)">
            <summary>
            Sanitizes the specified HTML document. Even if only a fragment is given, a whole document will be returned.
            </summary>
            <param name="html">The HTML document to sanitize.</param>
            <param name="baseUrl">The base URL relative URLs are resolved against. No resolution if empty.</param>
            <param name="outputFormatter">The formatter used to render the DOM. Using the <see cref="P:Ganss.XSS.IHtmlSanitizer.OutputFormatter"/> if null.</param>
            <returns>The sanitized HTML document.</returns>
        </member>
        <member name="T:Ganss.XSS.Iri">
            <summary>
            Represents an Internationalized Resource Identifier
            </summary>
        </member>
        <member name="P:Ganss.XSS.Iri.Value">
            <summary>
            Gets or sets the value of the IRI.
            </summary>
            <value>
            The value of the IRI.
            </value>
        </member>
        <member name="P:Ganss.XSS.Iri.IsAbsolute">
            <summary>
            Gets a value indicating whether the IRI is absolute.
            </summary>
            <value>
              <c>true</c> if the IRI is absolute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Ganss.XSS.Iri.Scheme">
            <summary>
            Gets or sets the scheme of the IRI, e.g. http.
            </summary>
            <value>
            The scheme of the IRI.
            </value>
        </member>
        <member name="T:Ganss.XSS.RemoveReason">
            <summary>
            List of reasons why something was identified to get removed from the HTML
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.NotAllowedTag">
            <summary>
            Tag is not allowed
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.NotAllowedAttribute">
            <summary>
            Attribute is not allowed
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.NotAllowedStyle">
            <summary>
            Style is not allowed
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.NotAllowedUrlValue">
            <summary>
            Value is a non-allowed or harmful url
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.NotAllowedValue">
            <summary>
            Value is not allowed or harmful
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.NotAllowedCssClass">
            <summary>
            CSS Class is not allowed
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.ClassAttributeEmpty">
            <summary>
            The class attribute is empty
            </summary>
        </member>
        <member name="F:Ganss.XSS.RemoveReason.StyleAttributeEmpty">
            <summary>
            The style attribute is empty
            </summary>
        </member>
        <member name="T:WorkQueue">
            <summary>
            
            </summary>
        </member>
        <member name="M:WorkQueue.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:WorkQueue.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="thread"></param>
        </member>
        <member name="M:WorkQueue.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="thread"></param>
            <param name="capacity"></param>
        </member>
    </members>
</doc>
